[tox]
minversion = 4
env_list =
    test
    docs
    fmt
    dev

[base]
runner = uv-venv-runner
setenv =
    RUST_BACKTRACE=1
    CARGO_TARGET_DIR={toxinidir}/.cargo_build
deps =
    -r{toxinidir}/tests/requirements.txt
commands =
    uv pip freeze
    pytest {tty:--color=yes} {posargs}

[testenv]
description =
    test: run tests (defaut local python)
    coverage: run tests with coverage
setenv = {[base]setenv}
deps = {[base]deps}
commands = {[base]commands}
package = wheel
wheel_build_env = .pkg

[testenv:dev]
description = Editable install with debug build.
setenv = {[base]setenv}
deps = {[base]deps}
commands = {[base]commands}
package = editable
wheel_build_env = .pkg

[testenv:min_deps]
description = Test with minimum versions of the dependencies
setenv = {[base]setenv}
deps = {[base]deps}
commands = {[base]commands}
package = wheel
wheel_build_env = .pkg-mindeps
uv_resolution = lowest-direct

[testenv:coverage]
description =
    Generate HTML coverage report for last test run
skip_install = True
deps = coverage
commands =
    coverage html

[testenv:docs]
description = Build the docs
skip_install = True
deps =
    -r{toxinidir}/docs/requirements.txt
changedir = docs
allowlist_externals = uv
commands =
    uv pip freeze
    sphinx-build  -W -b html . _build/html
    sphinx-build  -W -b linkcheck . _build/html

[testenv:fmt]
description = Check code style. Pass '--check' to instead check formatting.
skip_install = True
changedir = .
deps =
    black ~= 23.0
allowlist_externals = cargo
commands =
    black --version
    black {posargs} src/scalib tests examples setup.py
    cargo fmt --version
    cargo fmt --manifest-path src/scalib_ext/Cargo.toml --all -- {posargs}

